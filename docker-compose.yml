version: '3'

services:
  # Application container
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rule_engine_app
    env_file:
      - prod.env
    environment:
      - APP_KEY=${APP_KEY}
      - SLACK_ALERT_WEBHOOK=${SLACK_ALERT_WEBHOOK}
    restart: unless-stopped
    working_dir: /var/www/rule-engine
    volumes:
      - .:/var/www/rule-engine
    networks:
      - rule-engine-net
    depends_on:
      - db

  # Nginx web server container
  web:
    image: nginx:alpine
    container_name: rule_engine_web
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - .:/var/www/rule-engine
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - rule-engine-net

  # MySQL database container
  db:
    image: mysql:8.0
    container_name: rule_engine_db
    restart: unless-stopped
    ports:
      - "3306:3306"
    env_file:
      - prod.env
    environment:
      - DB_CONNECTION=${MYSQL_CONNECTION}
      - DB_HOST=${MYSQL_HOST}
      - DB_DATABASE=${MYSQL_DATABASE}
      - DB_USERNAME=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - DB_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - engineData:/var/lib/mysql
    networks:
      - rule-engine-net

  # Mailhog email service container
  mailhog:
    image: mailhog/mailhog
    container_name: rule_engine_mailhog
    env_file:
      - prod.env
    ports:
      - "${MAIL_PORT}:8025"
    restart: unless-stopped
    networks:
      - rule-engine-net

  rabbitmq:
    image: "rabbitmq:3.13-management"
    hostname: "rabbit"
    ports:
      - "15672:15672"
      - "5672:5672"
    env_file:
      - prod.env
    environment:
      - RABBITMQ_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_DEFAULT_PASS}
    labels:
      NAME: "rabbitmq"
    volumes:
      - ./rabbitmq-isolated.conf:/etc/rabbitmq/rabbitmq.config
    networks:
      - rule-engine-net

networks:
  rule-engine-net:
    driver: bridge

volumes:
  engineData:
    driver: local
